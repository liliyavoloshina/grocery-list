{"version":3,"sources":["GroceryItem.js","GroceryReset.js","GroceryList.js","GrocerySorting.js","GroceryFiltering.js","GroceryNew.js","App.js","reportWebVitals.js","index.js"],"names":["GroceryItem","props","isBought","product","bought","onClick","onBought","className","name","amount","GroceryReset","this","onReset","handleReset","Component","GroceryList","e","onBoughtItem","sortByAmount","filterText","filterBought","products","length","sort","a","b","forEach","p","nameDown","toLowerCase","nameUp","toUpperCase","indexOf","push","handleBoughtItem","id","React","GrocerySorting","onSortByAmount","handleSortByAmount","GroceryFiltering","onFilterText","target","value","onFilterBought","onChange","handleFilterText","placeholder","htmlFor","handleFilterBought","type","GroceryNew","state","newItemName","newItemAmount","setState","preventDefault","onAddNewItem","itemsLength","onSubmit","handleNewItemName","handleNewItemAmount","App","items","text","data","JSON","parse","localStorage","getItem","newItem","updatedState","slice","unshift","setItem","stringify","item","changedState","map","oldItem","removeItem","handleStateItems","handleStateAddNewItem","handleStateFilterText","handleStateFilterBought","handleStateSortByAmount","sortByPriority","hanldeStateReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAaeA,MAbf,SAAqBC,GACnB,IAGMC,EAAWD,EAAME,QAAQC,OAC/B,OACE,qBAAIC,QAAS,WAJbJ,EAAMK,SAASL,EAAME,UAIkBI,UAAS,uBAAkBL,EAAW,sBAAwB,IAArG,UACE,sBAAMK,UAAU,qBAAhB,SAAsCN,EAAME,QAAQK,OACpD,uBAAMD,UAAU,uBAAhB,UAAwCN,EAAME,QAAQM,OAAtD,cCKSC,EAXf,iKACE,WACEC,KAAKV,MAAMW,YAFf,oBAIE,WAAU,IAAD,OACP,OAAO,qBAAKL,UAAU,gBAAf,SACL,wBAAQF,QAAS,kBAAM,EAAKQ,eAAeN,UAAU,qBAArD,yBANN,GAAkCO,aC+DnBC,E,sKA5Db,SAAiBC,GACfL,KAAKV,MAAMgB,aAAaD,K,yBAE1B,WACEL,KAAKV,MAAMW,Y,oBAEb,WAAU,IAAD,OACDM,EAAeP,KAAKV,MAAMiB,aAC1BC,EAAaR,KAAKV,MAAMkB,WACxBC,EAAeT,KAAKV,MAAMmB,aAE1BC,EAAW,GAgCjB,OA/BIV,KAAKV,MAAMoB,SAASC,OAAS,IAC3BJ,EACOP,KAAKV,MAAMoB,SAASE,MAAK,SAACC,EAAGC,GACpC,OAAOD,EAAEf,OAASgB,EAAEhB,UAGbE,KAAKV,MAAMoB,SAASE,MAAK,SAACC,EAAGC,GACpC,OAAOA,EAAEhB,OAASe,EAAEf,WAGjBiB,SAAQ,SAAAC,GACb,IAAIC,EAAWD,EAAEnB,KAAKqB,cAClBC,EAASH,EAAEnB,KAAKuB,eAEgB,IAAlCH,EAASI,QAAQb,KACe,IAAhCW,EAAOE,QAAQb,IAIbC,IAA6B,IAAbO,EAAEvB,QAGtBiB,EAASY,KACP,cAAC,EAAD,CACE3B,SAAU,SAAAU,GAAC,OAAI,EAAKkB,iBAAiBlB,IAErCb,QAASwB,GADJA,EAAEQ,QAMXxB,KAAKV,MAAMoB,SAASC,OAAS,EAE7B,gCACE,cAAC,EAAD,CAAcV,QAAS,kBAAM,EAAKC,iBACjCQ,EAASC,OAAS,EACjB,oBAAIf,UAAU,eAAd,SAA8Bc,IAE9B,qBAAKd,UAAU,OAAf,+CAKC,qBAAKA,UAAU,OAAf,mC,GAxDa6B,IAAMtB,WCmBjBuB,E,wKApBb,WACE1B,KAAKV,MAAMqC,gBAAgB3B,KAAKV,MAAMiB,gB,oBAExC,WAAU,IAAD,OACP,OACE,qBAAKX,UAAU,sBAAf,SACE,wBACEF,QAAS,kBAAM,EAAKkC,sBADtB,SAGG5B,KAAKV,MAAMiB,aACV,mBAAGX,UAAU,+BAEb,mBAAGA,UAAU,qC,GAbI6B,IAAMtB,WC+BpB0B,E,sKA9Bb,SAAiBxB,GACfL,KAAKV,MAAMwC,aAAazB,EAAE0B,OAAOC,S,gCAEnC,WACEhC,KAAKV,MAAM2C,gBAAgBjC,KAAKV,MAAMmB,gB,oBAExC,WAAU,IAAD,OACP,OACE,sBAAKb,UAAU,wBAAf,UACE,uBACEsC,SAAU,SAAA7B,GAAC,OAAI,EAAK8B,iBAAiB9B,IACrCT,UAAU,kCACVwC,YAAY,cAEd,sBAAKxC,UAAU,iCAAf,UACE,uBAAOyC,QAAQ,cAAczC,UAAU,+BAAvC,yBAGA,uBACEsC,SAAU,kBAAM,EAAKI,sBACrB1C,UAAU,+BACV4B,GAAG,cACHe,KAAK,uB,GAvBcd,IAAMtB,WC+DtBqC,EA/Df,kDACE,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IACDmD,MAAQ,CACXC,YAAa,GACbC,cAAe,IAJA,EADrB,qDASE,SAAkBtC,GAChBL,KAAK4C,SAAS,CACZF,YAAarC,EAAE0B,OAAOC,UAX5B,iCAeE,SAAoB3B,GAClBL,KAAK4C,SAAS,CACZD,cAAetC,EAAE0B,OAAOC,UAjB9B,sBAqBE,SAAS3B,GACPA,EAAEwC,iBACF7C,KAAKV,MAAMwD,aAAa,CACtBtB,GAAIxB,KAAKV,MAAMyD,YAAc,EAC7BlD,KAAMG,KAAKyC,MAAMC,YACjB5C,OAAQE,KAAKyC,MAAME,cACnBlD,QAAQ,IAEVO,KAAK4C,SAAS,CACZF,YAAa,GACbC,cAAe,OA/BrB,oBAmCE,WAAU,IAAD,OACP,OACE,uBAAMK,SAAU,SAAA3C,GAAC,OAAI,EAAK2C,SAAS3C,IAAIT,UAAU,iBAAjD,UACE,sBAAKA,UAAU,wBAAf,UACE,uBACEsC,SAAU,SAAA7B,GAAC,OAAI,EAAK4C,kBAAkB5C,IACtC2B,MAAOhC,KAAKyC,MAAMC,YAClB9C,UAAU,6BACVwC,YAAY,oBAEd,uBACEG,KAAK,SACLL,SAAU,SAAA7B,GAAC,OAAI,EAAK6C,oBAAoB7C,IACxC2B,MAAOhC,KAAKyC,MAAME,cAClB/C,UAAU,+BACVwC,YAAY,iBAGhB,qBAAKxC,UAAU,sBAAf,SACE,wBAAQ2C,KAAK,SAAb,SACE,mBAAG3C,UAAU,2BAvDzB,GAAgCO,aC8GjBgD,E,kDAxGb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDmD,MAAQ,CACXW,MAAO,GACP7C,cAAc,EACdC,WAAY,GACZC,cAAc,GANC,E,2DAUnB,SAAwBG,GACtBZ,KAAK4C,SAAS,CACZrC,aAAcK,M,mCAIlB,SAAsByC,GACpBrD,KAAK4C,SAAS,CACZpC,WAAY6C,M,8BAIhB,WACE,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtCJ,IACHA,EAAO,IAETtD,KAAK4C,SAAS,CACZQ,MAAOE,M,mCAIX,SAAsBK,GACpB,IAAIC,EACA5D,KAAKyC,MAAMW,OACbQ,EAAe5D,KAAKyC,MAAMW,MAAMS,SACnBC,QAAQH,GAErBC,EAAe,CAACD,GAElBF,aAAaM,QAAQ,gBAAiBR,KAAKS,UAAUJ,IACrD5D,KAAK4C,SAAS,CAAEQ,MAAOQ,M,8BAGzB,SAAiBK,GACf,IAAMC,EAAelE,KAAKyC,MAAMW,MAAMe,KAAI,SAAAC,GAAO,OAC/CA,EAAQ5C,KAAOyC,EAAKzC,GAApB,2BAA8B4C,GAA9B,IAAuC3E,QAAS2E,EAAQ3E,SAAW2E,KAErEX,aAAaM,QAAQ,gBAAiBR,KAAKS,UAAUE,IACrDlE,KAAK4C,SAAS,CAAEQ,MAAOc,M,qCAGzB,SAAwBzE,GACtBO,KAAK4C,SAAS,CACZnC,aAAchB,M,8BAIlB,WACEgE,aAAaY,WAAW,iBACxBrE,KAAK4C,SAAS,CACZQ,MAAO,GACP7C,cAAc,EACdC,WAAY,GACZC,cAAc,M,+BAIlB,WACET,KAAKsE,qB,oBAGP,WAAU,IAAD,OACP,OACE,sBAAK1E,UAAU,MAAf,UACE,cAAC,EAAD,CACEmD,YAAa/C,KAAKyC,MAAMW,MAAQpD,KAAKyC,MAAMW,MAAMzC,OAAS,EAC1DmC,aAAc,SAAAa,GAAO,OAAI,EAAKY,sBAAsBZ,MAEtD,sBAAK/D,UAAU,iBAAf,UACE,cAAC,EAAD,CACEkC,aAAc,SAAAuB,GAAI,OAAI,EAAKmB,sBAAsBnB,IACjDpB,eAAgB,SAAAxC,GAAM,OAAI,EAAKgF,wBAAwBhF,IACvDgB,aAAcT,KAAKyC,MAAMhC,eAE3B,cAAC,EAAD,CACEkB,eAAgB,SAAAf,GAAI,OAAI,EAAK8D,wBAAwB9D,IACrDL,aAAcP,KAAKyC,MAAMlC,kBAG7B,cAAC,EAAD,CACEG,SAAUV,KAAKyC,MAAMW,MACrBuB,eAAgB3E,KAAKyC,MAAMkC,eAC3BpE,aAAcP,KAAKyC,MAAMlC,aACzBC,WAAYR,KAAKyC,MAAMjC,WACvBC,aAAcT,KAAKyC,MAAMhC,aACzBH,aAAc,SAAA2D,GAAI,OAAI,EAAK1C,iBAAiB0C,IAC5ChE,QAAS,kBAAM,EAAK2E,6B,GAlGZnD,IAAMtB,WCKT0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.1b8dd659.chunk.js","sourcesContent":["function GroceryItem(props) {\r\n  const handleBoughtItem = () => {\r\n    props.onBought(props.product)\r\n  }\r\n  const isBought = props.product.bought\r\n  return (\r\n    <li onClick={() => handleBoughtItem()} className={`grosery-item ${isBought ? \"grosery-item-bought\" : \"\"}`}>\r\n      <span className=\"grosery-item__name\">{props.product.name}</span>\r\n      <span className=\"grosery-item__amount\">{props.product.amount}/pc.</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default GroceryItem\r\n","import React, { Component } from 'react'\r\n\r\nexport class GroceryReset extends Component {\r\n  handleReset() {\r\n    this.props.onReset()\r\n  }\r\n  render() {\r\n    return <div className=\"grocery-reset\">\r\n      <button onClick={() => this.handleReset()} className=\"grocery-reset__btn\">Reset</button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default GroceryReset\r\n","import React from 'react'\r\nimport './css/style.css'\r\nimport GroceryItem from './GroceryItem'\r\nimport GroceryReset from './GroceryReset'\r\nclass GroceryList extends React.Component {\r\n  handleBoughtItem(e) {\r\n    this.props.onBoughtItem(e)\r\n  }\r\n  handleReset() {\r\n    this.props.onReset()\r\n  }\r\n  render() {\r\n    const sortByAmount = this.props.sortByAmount\r\n    const filterText = this.props.filterText\r\n    const filterBought = this.props.filterBought\r\n    let sorted = []\r\n    const products = []\r\n    if (this.props.products.length > 0) {\r\n      if (sortByAmount) {\r\n        sorted = this.props.products.sort((a, b) => {\r\n          return a.amount - b.amount\r\n        })\r\n      } else {\r\n        sorted = this.props.products.sort((a, b) => {\r\n          return b.amount - a.amount\r\n        })\r\n      }\r\n      sorted.forEach(p => {\r\n        let nameDown = p.name.toLowerCase()\r\n        let nameUp = p.name.toUpperCase()\r\n        if (\r\n          nameDown.indexOf(filterText) === -1 &&\r\n          nameUp.indexOf(filterText) === -1\r\n        ) {\r\n          return\r\n        }\r\n        if (filterBought && p.bought === true) {\r\n          return\r\n        }\r\n        products.push(\r\n          <GroceryItem\r\n            onBought={e => this.handleBoughtItem(e)}\r\n            key={p.id}\r\n            product={p}\r\n          />\r\n        )\r\n      })\r\n    }\r\n    if (this.props.products.length > 0) {\r\n      return (\r\n        <div>\r\n          <GroceryReset onReset={() => this.handleReset()} />\r\n          {products.length > 0 ? (\r\n            <ul className=\"grocery-list\">{products}</ul>\r\n          ) : (\r\n            <div className=\"note\">No products by such options...</div>\r\n          )}\r\n        </div>\r\n      )\r\n    } else {\r\n      return <div className=\"note\">Add some grocery!</div>\r\n    }\r\n  }\r\n}\r\n\r\nexport default GroceryList\r\n","import React from 'react'\r\n\r\nclass GrocerySorting extends React.Component {\r\n  handleSortByAmount() {\r\n    this.props.onSortByAmount(!this.props.sortByAmount)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"grocery-navbar__btn\">\r\n        <button\r\n          onClick={() => this.handleSortByAmount()}\r\n        >\r\n          {this.props.sortByAmount ? (\r\n            <i className=\"fas fa-sort-numeric-up-alt\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-sort-numeric-down\"></i>\r\n          )}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GrocerySorting\r\n","import React from 'react'\r\n\r\nclass GroceryFiltering extends React.Component {\r\n  handleFilterText(e) {\r\n    this.props.onFilterText(e.target.value)\r\n  }\r\n  handleFilterBought() {\r\n    this.props.onFilterBought(!this.props.filterBought)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"grocery-navbar__input\">\r\n        <input\r\n          onChange={e => this.handleFilterText(e)}\r\n          className=\"grocery-navbar__input-filtering\"\r\n          placeholder=\"Search...\"\r\n        />\r\n        <div className=\"grocery-navbar__wrapper-bought\">\r\n          <label htmlFor=\"only-bougth\" className=\"grocery-navbar__label-bought\">\r\n            Only bought\r\n          </label>\r\n          <input\r\n            onChange={() => this.handleFilterBought()}\r\n            className=\"grocery-navbar__input-bought\"\r\n            id=\"only-bougth\"\r\n            type=\"checkbox\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroceryFiltering\r\n","import React, { Component } from 'react'\r\n\r\nexport class GroceryNew extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newItemName: '',\r\n      newItemAmount: ''\r\n    }\r\n  }\r\n\r\n  handleNewItemName(e) {\r\n    this.setState({\r\n      newItemName: e.target.value\r\n    })\r\n  }\r\n\r\n  handleNewItemAmount(e) {\r\n    this.setState({\r\n      newItemAmount: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.onAddNewItem({\r\n      id: this.props.itemsLength + 1,\r\n      name: this.state.newItemName,\r\n      amount: this.state.newItemAmount,\r\n      bought: false\r\n    })\r\n    this.setState({\r\n      newItemName: '',\r\n      newItemAmount: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)} className=\"grocery-navbar\">\r\n        <div className=\"grocery-navbar__input\">\r\n          <input\r\n            onChange={e => this.handleNewItemName(e)}\r\n            value={this.state.newItemName}\r\n            className=\"grocery-navbar__input-name\"\r\n            placeholder=\"Add new item...\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            onChange={e => this.handleNewItemAmount(e)}\r\n            value={this.state.newItemAmount}\r\n            className=\"grocery-navbar__input-amount\"\r\n            placeholder=\"How much?\"\r\n          />\r\n        </div>\r\n        <div className=\"grocery-navbar__btn\">\r\n          <button type=\"submit\">\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroceryNew\r\n","import React from 'react'\nimport './css/style.css'\nimport GroceryList from './GroceryList'\nimport GrocerySorting from './GrocerySorting'\nimport GroceryFiltering from './GroceryFiltering'\nimport GroceryNew from './GroceryNew'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [],\n      sortByAmount: false,\n      filterText: '',\n      filterBought: false\n    }\n  }\n\n  handleStateSortByAmount(sort) {\n    this.setState({\n      sortByAmount: sort\n    })\n  }\n\n  handleStateFilterText(text) {\n    this.setState({\n      filterText: text\n    })\n  }\n\n  handleStateItems() {\n    let data = JSON.parse(localStorage.getItem('grocery-items'))\n    if (!data) {\n      data = []\n    }\n    this.setState({\n      items: data\n    })\n  }\n\n  handleStateAddNewItem(newItem) {\n    let updatedState\n    if (this.state.items) {\n      updatedState = this.state.items.slice()\n      updatedState.unshift(newItem)\n    } else {\n      updatedState = [newItem]\n    }\n    localStorage.setItem('grocery-items', JSON.stringify(updatedState))\n    this.setState({ items: updatedState })\n  }\n\n  handleBoughtItem(item) {\n    const changedState = this.state.items.map(oldItem =>\n      oldItem.id === item.id ? { ...oldItem, bought: !oldItem.bought } : oldItem\n    )\n    localStorage.setItem('grocery-items', JSON.stringify(changedState))\n    this.setState({ items: changedState })\n  }\n\n  handleStateFilterBought(bought) {\n    this.setState({\n      filterBought: bought\n    })\n  }\n\n  hanldeStateReset() {\n    localStorage.removeItem('grocery-items')\n    this.setState({\n      items: [],\n      sortByAmount: false,\n      filterText: '',\n      filterBought: false\n    })\n  }\n\n  componentDidMount() {\n    this.handleStateItems()\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <GroceryNew\n          itemsLength={this.state.items ? this.state.items.length : 0}\n          onAddNewItem={newItem => this.handleStateAddNewItem(newItem)}\n        />\n        <div className=\"grocery-navbar\">\n          <GroceryFiltering\n            onFilterText={text => this.handleStateFilterText(text)}\n            onFilterBought={bought => this.handleStateFilterBought(bought)}\n            filterBought={this.state.filterBought}\n          />\n          <GrocerySorting\n            onSortByAmount={sort => this.handleStateSortByAmount(sort)}\n            sortByAmount={this.state.sortByAmount}\n          />\n        </div>\n        <GroceryList\n          products={this.state.items}\n          sortByPriority={this.state.sortByPriority}\n          sortByAmount={this.state.sortByAmount}\n          filterText={this.state.filterText}\n          filterBought={this.state.filterBought}\n          onBoughtItem={item => this.handleBoughtItem(item)}\n          onReset={() => this.hanldeStateReset()}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals();\n"],"sourceRoot":""}